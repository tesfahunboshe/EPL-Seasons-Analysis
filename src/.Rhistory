geom_text(aes(y = Count,
label = Count), size=5,
position = position_stack(vjust = 0.5))+
scale_fill_discrete(name = "", labels = c("Lost", "Tied","Won"))+
ylab("Number of games")+
theme(axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank())+
ggtitle("Number of games won vs lost/tied after trailing at half time")
ggplot(teamGamesTrailing %>% group_by(Points) %>% summarise(Count = n()),
aes(x="", y=Count, fill=as.character(Points)))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y")+
geom_text(aes(y = Count,
label = Count), size=5,
position = position_stack(vjust = 0.5))+
scale_fill_discrete(name = "", labels = c("Lost", "Tied","Won"))+
ylab("Number of games")+
theme(axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank())+
ggtitle("Number of games won vs lost/tied after trailing at half time")
cat("Total Points in the season: ", sum(teamGames$Points))
SeasonData
SeasonTable <- data.frame(Team=character(),
Points= numeric(),
stringsAsFactors=FALSE)
SeasonTable$Team <- unique(SeasonData$HomeTeam)
zeros()
c(0)*8
seq(0,8)
rep(0,8)
SeasonTable <- data.frame(Team=unique(SeasonData$HomeTeam),
Points= rep(0,length(unique(SeasonData$HomeTeam))))
cat(param$team)
cat(params$team)
fname<-c("Joe", "Bob", "Bill", "Tom", "Sue","Sam","Jane","Ruby")
score<-c(500, 490, 500, 750, 550, 500, 210, 320)
dat<-data.frame(fname,score)
order.scores<-order(dat$score,dat$fname)
order.scores
dat
dat$rank <- NA
dat$rank[order.scores] <- 1:nrow(dat)
dat
cat("Number of games per result type:", table(teamGames$Points))
table(teamGames$Points)
table(teamGames$Points)
teamGames
functionTeamGames <- function(team){
teamGames <-SeasonData %>% filter(HomeTeam == team | AwayTeam == team)
teamGames$IsHomeAway <- ifelse(teamGames$HomeTeam == team, "H", "A")
teamGames$Points <- ifelse(teamGames$FTR=="D",1,ifelse(teamGames$FTR == teamGames$IsHomeAway,3,0))
return(teamGames)
}
teamGames <- functionTeamGames(params$team)
teamGames$TeamGoals <- ifelse(teamGames$IsHomeAway=="H",teamGames$FTHG,teamGames$FTAG)
teamGames$Shots <- ifelse(teamGames$IsHomeAway=="H",teamGames$HS,teamGames$AS)
teamGames$ShotsonTarget <- ifelse(teamGames$IsHomeAway=="H",teamGames$HS,teamGames$AS)
teamGames
teamGames
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,fill=IsHomeAway)) +
geom_point()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_bw()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_classic()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_minimal()
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_minimal()+
scale_color_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_minimal()+
scale_color_discrete(name = "", labels = c("Away", "Home"))+
labs(x = "Number of shots",
y = "Number of goals",
title = "Shot Conversion Rate")
teamGames
teamGamesTrailing <- teamGames[teamGames$HTR!=teamGames$IsHomeAway & teamGames$HTR!="D",][,c(1:5,7,8,25)]
teamGamesTrailing
teamGamesTrailing <- teamGames[teamGames$HTR!=teamGames$IsHomeAway & teamGames$HTR!="D",][,c(1:5,7,8,24)]
colnames(teamGamesTrailing)[4:7] <- c("Full Time Home Goals", "Full Time Away Goals","Half Time Home Goals", "Half Time Away Goals")
ggplot(teamGamesTrailing %>% group_by(Points) %>% summarise(Count = n()),
aes(x="", y=Count, fill=as.character(Points)))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y")+
geom_text(aes(y = Count,
label = Count), size=5,
position = position_stack(vjust = 0.5))+
scale_fill_discrete(name = "", labels = c("Lost", "Tied","Won"))+
ylab("Number of games")+
theme(axis.title.y=element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank())+
ggtitle("Number of games won vs lost/tied after trailing at half time")
cat("Total Points in the season: ", sum(teamGames$Points))
cat("Number of games per result type:")
table(teamGames$Points)
SeasonTable <- data.frame(Team=unique(SeasonData$HomeTeam),
Points= rep(0,length(unique(SeasonData$HomeTeam))))
totalPoints <- function(team)
{
teamGames <- functionTeamGames(team)
sum(teamGames$Points)
}
SeasonTable$Points <- lapply(SeasonTable$Team, totalPoints)
SeasonTable
lapply(SeasonTable$Team, totalPoints)
x<-lapply(SeasonTable$Team, totalPoints)
str(x)
unlist(x)
SeasonTable$Points <- unlist(lapply(SeasonTable$Team, totalPoints))
SeasonTable
order.scores<-order(dat$Points,dat$Team)
order.scores<-order(SeasonTable$Points,SeasonTable$Team)
SeasonTable$rank <- NA
SeasonTable$rank[order.scores] <- 1:nrow(SeasonTable)
cat(params$team, "finished in",SeasonTable$rank[SeasonTable$Team==params$team] ,"place in EPL season-",params$season)
order.scores<-order(SeasonTable$Points,SeasonTable$Team)
SeasonTable$rank <- NA
SeasonTable$rank[order.scores] <- 1:nrow(SeasonTable)
cat(params$team, "finished in",21-SeasonTable$rank[SeasonTable$Team==params$team] ,"place in EPL season-",params$season)
order.scores<-order(SeasonTable$Points,SeasonTable$Team)
SeasonTable$rank <- NA
SeasonTable$rank[order.scores] <- 1:nrow(SeasonTable)
cat(params$team, "finished in",21-SeasonTable$rank[SeasonTable$Team==params$team] ,"th place in EPL season-",params$season)
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth()+
theme_minimal()+
scale_color_discrete(name = "", labels = c("Away", "Home"))+
labs(x = "Number of shots",
y = "Number of goals",
title = "Shot Conversion Rate")
SeasonTable
top6 <- SeasonTable$Team[order(SeasonTable$rank),][1:6,]
top6 <- SeasonTable$Team[order(SeasonTable$rank),][1:6]
order(SeasonTable$rank)
SeasonTable$Team[order(SeasonTable$rank),]
SeasonTable$Team[order(SeasonTable$rank)]
top6 <- SeasonTable$Team[order(SeasonTable$rank)][16:20]
top6 <- top6[!top6 %in% params$team]
top6
teamGames$Opponent <- ifelse(teamGames$HomeTeam==params$team, teamGames$AwayTeam,teamGames$HomeTeam)
teamGames
Gamestop6 %>%
group_by(Points) %>%
mutate(per =  100 *count/sum(count)) %>%
ungroup
Gamestop6 <- teamGames %>% filter(Opponent %in% top6)
Gamestop6 %>%
group_by(Points) %>%
mutate(per =  100 *count/sum(count)) %>%
ungroup
Gamestop6
sum(Gamestop6$Points==3)/nrow(Gamestop6)
cat(params$team,"won", 100*sum(Gamestop6$Points==3)/nrow(Gamestop6)," % of their games against the top 6 in season ", params$season)
knit_with_parameters("~/Sem 4/Reproducible research/Project/EPL-Seasons-Analysis/src/ReportGenerator.Rmd")
# set the root directory
library(tidyverse)
knitr::opts_knit$set(root.dir = '/EPL-Seasons-Analysis')
# knitr::opts_chunk$set(echo = TRUE)
SeasonData <- read.csv(paste0("../input/season-",params$season,"_csv.csv"))[,2:23]
# set the root directory
library(tidyverse)
knitr::opts_knit$set(root.dir = '/EPL-Seasons-Analysis')
# knitr::opts_chunk$set(echo = TRUE)
SeasonData <- read.csv(paste0("../input/season-",params$season,"_csv.csv"))[,2:23]
setwd("~/Sem 4/Reproducible research/Project/EPL-Seasons-Analysis/src")
library(tidyverse, warn.conflicts = FALSE)
options(dplyr.summarise.inform = FALSE)
ggplot(teamGames, aes(x=ShotsonTarget,y=TeamGoals,color=IsHomeAway)) +
geom_point()+
geom_smooth(formula = y ~ x, method = "loess")+
theme_minimal()+
scale_color_discrete(name = "", labels = c("Away", "Home"))+
labs(x = "Number of shots",
y = "Number of goals",
title = "Shot Conversion Rate")
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
position = position_stack(vjust = 0.5)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
position = position_dodge(0.9)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
position = position_dodge(-0.9)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
vjust = -0.3,
position = position_dodge(-0.9)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
vjust = 0.1,
position = position_dodge(-0.9)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
# vjust = 0.1,
position = position_dodge(-0.9)) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
# vjust = 0.1,
# position = position_dodge(-0.9)
) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
# vjust = 0.1,
position = position_dodge(-0.5)
) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
# vjust = 0.1,
position = position_dodge(0.5)
) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
ggplot(teamGames %>% group_by(TeamGoals,IsHomeAway) %>% summarise(N = n()),
aes(x =TeamGoals , y = N, fill = IsHomeAway)) +
geom_bar(stat = "identity",position = position_dodge(0.9))+
geom_text(
aes(label = N),
color = "black",
# vjust = 0.1,
position = position_dodge(0.7)
) +
labs(title=paste(params$team, " - Goals Per Game-Season:",params$season),
caption = "Source: EPL data set")+
scale_x_continuous(name = "Number of goals",
breaks = seq(0,15,1)
)+
scale_y_continuous(name = "Count of games",
breaks = seq(0,36,1)
)+
scale_fill_discrete(name = "", labels = c("Away", "Home"))
SeasonTable
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis-season:", season, ".html"), # saves in output folder
)
}
}
paste0("../output/",team," Analysis-season:", season, ".html")
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("output/",team," Analysis-season:", season, ".html"), # saves in output folder
)
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis-season:", season, ".html"), # saves in output folder
)
}
}
setwd("~/Sem 4/Reproducible research/Project/Test/src")
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis-season:", season, ".html"), # saves in output folder
)
}
}
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis_season:",season, ".html"), # saves in output folder
)
}
}
paste0("../output/",team," Analysis_season:",season, ".html")
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis_season",season, ".html"), # saves in output folder
)
}
}
setwd("~/Sem 4/Reproducible research/Project/EPL-Seasons-Analysis/src")
# install and load necessary packages
requiredPackages = c("knitr","rmarkdown")
for(i in requiredPackages){if(!require(i,character.only = TRUE)) install.packages(i)}
for(i in requiredPackages){if(!require(i,character.only = TRUE)) library(i,character.only = TRUE)}
# set the season and teams
seasons <- c("0910", "1011","1112", "1213","1314", "1415","1516", "1617", "1718","1819")
teams <- c("Man United", "Arsenal", "Liverpool","Man City", "Tottenham", "Huddersfield","Newcastle","Chelsea","Crystal Palace","Southampton")
# render in a loop
for (season in seasons[1:2]) {
for (team in teams[1:2])
{
render(
"ReportGenerator.Rmd",
params = list(
season = season,
team = team
),
output_format = "html_document",
output_file = paste0("../output/",team," Analysis_season_",season, ".html"), # saves in output folder
)
}
}
